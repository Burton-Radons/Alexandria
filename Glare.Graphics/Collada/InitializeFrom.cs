using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Serialization;

namespace Glare.Graphics.Collada {
	/// <summary>Initializes an entire image or portions of an image from referenced or embedded data. </summary>
	/// <remarks>
	/// The exact usage of this element depends on its parent element: 
	/// 
	/// If the element is a child of <see cref="Image"/> then it is intended to initialize the complete image. The image’s dimensions and structure will match that of the data if possible. 
	/// 
	/// If the element is a child of <see cref="CreateTexture"/> which is a child of  <see cref="Image"/> then it’s intended to initialize a small portion of the image, one portion of the structure at a time. 
	/// 
	/// Most image assets are initialized from data generated by artists. This data is typically stored in an image file using one of the many popular file formats, such as BMP, JPG, TGA, PSD, DDS, and so on. 
	/// 
	/// Some image data, such as noise textures or lightmaps, is procedurally generated by applications. These can be optionally embedded directly into the COLLADA file. 
	/// 
	/// This element supports the referencing or embedding of the image data and instructions for where within the image structure to load that data. 
	/// </remarks>
	[Serializable]
	public class InitializeFrom : Element {
		internal const string XmlName = "init_from";

		/// <summary>Only valid as a child of <see cref="Image"/>. Optional. Initializes higher MIP levels if data does not exist in a file. Defaults to <c>true</c>. </summary>
		[XmlAttribute("mips_generate")]
		[DefaultValue(true)]
		public bool MipsGenerate { get; set; }

		/// <summary>Contains the URL of a file from which to take initialization data. Assumes the characteristics of the file. If it is a complex format such as DDS, this might include cube maps, volumes, MIPs, and so on.</summary>
		[XmlElement("ref", DataType = "anyURI")]
		public string Reference { get; set; }

		public InitializeFrom() {
			MipsGenerate = true;
		}

		public InitializeFrom(string reference) : this() { Reference = reference; }
	}
}
